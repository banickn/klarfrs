name: Build and Publish Python Package

on:
  push:
    tags:
      - 'v*'  # Only run on version tags (e.g., v1.0.0)
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        platform: [ubuntu-latest]
        python-version: ['3.9', '3.10', '3.11']  # Specify Python versions
    runs-on: ${{ matrix.platform }}

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Install maturin
        run: pip install maturin

      - name: Build the package
        run: maturin build --release

      - name: Upload wheels as artifact
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.platform }}-py${{ matrix.python-version }}
          path: target/wheels/*.whl

  publish:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Download wheels
        uses: actions/download-artifact@v4
        with:
          path: ./downloaded_artifacts

      - name: List downloaded content
        run: |
          ls -R ./downloaded_artifacts

      - name: Prepare wheel files
        run: |
          mkdir -p ./wheels
          find ./downloaded_artifacts -name '*.whl' -exec cp {} ./wheels/ \;

      - name: Install twine
        run: pip install twine

      - name: Publish to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: twine upload ./wheels/*.whl